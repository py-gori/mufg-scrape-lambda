AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  mufg-scrape-lambda

  Sample SAM Template for mufg-scrape-lambda

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 300

Parameters:
  MufgUid:
    Type: String
  MufgPass:
    Type: String
  S3Bucket:
    Type: String

Resources:
  MufgScrapeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: mufg_scrape/
      Handler: app.handler
      Runtime: python3.7
      Architectures:
        - x86_64
      MemorySize: 512
      Events:
        ScrapeStartSchedule:
          Type: Schedule
          Properties:
            Schedule: 'cron(0 23 ? * 1 *)' # UTC timezone
            Name: WeeklySchedule
            Description: test schedule
            Enabled: true
      Environment:
        Variables:
          MUFG_UID: !Ref MufgUid
          MUFG_PASSWORD: !Ref MufgPass
          S3_BUCKET: !Ref S3Bucket
      Layers:
        - !Ref SeleniumLayer
        - !Ref HeadlessLayer
      Role: !GetAtt LambdaIAMRole.Arn
#      Policies:
#        - S3CrudPolicy:
#            BucketName: !Ref S3Bucket

  SeleniumLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: selenium
      CompatibleRuntimes:
        - python3.7
    Metadata:
      BuildMethod: python3.7

  HeadlessLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: headless
      CompatibleRuntimes:
        - python3.7
    Metadata:
      BuildMethod: python3.7

  LambdaIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetBucketNotification'
                  - 's3:PutBucketNotification'
                Resource: !Sub 'arn:aws:s3:::${S3Bucket}'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

#Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#  MufgScrapeFunction:
#    Description: "Mufg Scrape Lambda Function ARN"
#    Value: !GetAtt MufgScrapeFunction.Arn
#  LambdaIAMRole:
#    Description: "Implicit IAM Role created for Mufg Scrape function"
#    Value: !GetAtt LambdaIAMRole.Arn
